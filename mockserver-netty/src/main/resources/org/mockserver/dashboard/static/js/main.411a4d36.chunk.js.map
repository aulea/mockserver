{"version":3,"sources":["store/configureStore.js","actions/index.js","components/RequestFilter.js","components/JsonItem.js","components/LogMessage.js","components/ListHeader.js","containers/LogList.js","containers/JsonList.js","containers/Grid.js","containers/App.js","index.js","reducers/entities.js","reducers/index.js","middleware/socket.js","middleware/exposeState.js","store/configureStore.prod.js"],"names":["module","exports","require","__webpack_require__","d","__webpack_exports__","CONNECT_SOCKET","SEND_MESSAGE","sendMessage","MESSAGE_RECEIVED","webSocketMessageReceived","DISCONNECT_SOCKET","disconnectSocket","message","host","port","dispatch","type","sendWebSocketMessage","entities","filterNullsMultiValue","rawItems","items","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","rawItem","value","valueSet","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","values","err","return","name","push","loadData","_ref","_ref$host","_ref$port","_ref$requestMatcher","requestMatcher","requestFilter","method","path","keepAlive","secure","headers","queryStringParameters","cookies","enabled","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","filterNullsSingleValue","console","log","JSON","stringify","RequestFilter","renderValues","_ref2","fields","disabled","react_default","a","createElement","style","width","padding","paddingRight","display","verticalAlign","map","field","index","key","Field","fullWidth","component","TextField","hintText","onChange","e","floatingLabelText","index_es","minWidth","onClick","remove","remove_default","add_default","renderKeysToMultiValues","_ref3","title","color","paddingTop","textAlign","fontFamily","concat","AutoComplete","openOnFocus","filter","MUIAutoComplete","fuzzyFilter","dataSource","FieldArray","_this","mini","renderKeysToValues","_ref4","this","props","nextProps","expanded","margin","actAsExpander","showExpandableButton","backgroundColor","expandable","Toggle","label","labelPosition","marginBottom","paddingLeft","SelectField","primaryText","overflow","Component","selector","formValueSelector","reduxForm","form","initialValues","destroyOnUnmount","mapDispatchToProps","connect","state","requestFilterExpanded","pure","JsonItem","_this$props","_this$props$index","_this$props$displayIn","displayIndex","_this$props$collapsed","collapsed","_this$props$jsonItem","jsonItem","_this$props$display","_this$props$enableCli","enableClipboard","_this$props$textStyle","textStyle","main_default","src","whiteSpace","maxWidth","textOverflow","calculateIndex","theme","iconStyle","indentWidth","shouldCollapse","displayObjectSize","displayDataTypes","onEdit","onAdd","onDelete","length","fontSize","lineHeight","counter","httpObject","httpRequest","statusCode","reasonPhrase","LogMessage","cellStyle","paddingBottom","borderRadius","_this$props$logMessag","logMessage","_this$props$logMessag2","logMessageMaxWidth","formattedMessage","messageFormatter","messageFormat","arguments","noBorderTop","children","timestamp","replace","Date","toISOString","split","trim","selectStyle","Object","assign","div","messageArguments","paddingWidth","messageParts","messageDiv","messagePartIndex","indexOf","reason","parse","JsonItem_JsonItem","paddingIndex","borderTopStyle","borderTopWidth","borderTopColor","ListHeader","_this$props$text","text","font","LogList","_this$props$header","header","_this$props$items","ListHeader_ListHeader","overflowY","maxHeight","minHeight","borderCollapse","item","LogMessage_LogMessage","JsonList","_this$props$reverseIn","reverseIndex","Grid","_this$props$entities","_this$props$entities$","activeExpectations","_this$props$entities$2","recordedExpectations","_this$props$entities$3","recordedRequests","_this$props$entities$4","logMessages","_this$props$entities$5","className","borderStyle","borderWidth","LogList_LogList","JsonList_JsonList","float","borderRightStyle","borderRightWidth","transform","result","expectation","httpResponse","_state$entities","_state$entities$activ","_state$entities$recor","_state$entities$recor2","_state$entities$logMe","_state$entities$logMe2","_state$requestFilter","App","components_RequestFilter","containers_Grid","window","location","search","hostname","protocol","store","configureStore","render","es","App_App","document","getElementById","action","reverse","logMessageWidth","rootReducer","combineReducers","middleware_socket","socket","connected","close","connectSocket","WebSocket","onmessage","event","data","onclose","onopen","readyState","send","exposeState","objectSpread","getState","preloadedState","createStore","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.411a4d36.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n    module.exports = require('./configureStore.prod')\n} else {\n    module.exports = require('./configureStore.dev')\n}\n","export const CONNECT_SOCKET = 'CONNECT_SOCKET';\n\nconst connectWebSocket = (host, port, contextPath) => ({\n    type: CONNECT_SOCKET,\n    host: host,\n    port: port,\n    contextPath: contextPath\n});\n\nexport const connectSocket = (host, port, contextPath) => (dispatch) => {\n    return dispatch(connectWebSocket(host, port, contextPath));\n};\n\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\n\nconst sendWebSocketMessage = (message, host, port) => ({\n    type: SEND_MESSAGE,\n    message: message,\n    host: host,\n    port: port,\n});\n\nexport const sendMessage = (message, host, port) => (dispatch) => {\n    return dispatch(sendWebSocketMessage(message, host, port));\n};\n\nexport const MESSAGE_RECEIVED = 'MESSAGE_RECEIVED';\n\nexport const webSocketMessageReceived = (message) => ({\n    type: MESSAGE_RECEIVED,\n    entities: message\n});\n\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET';\n\nconst disconnectWebSocket = () => ({\n    type: DISCONNECT_SOCKET\n});\n\nexport const disconnectSocket = () => (dispatch) => {\n    return dispatch(disconnectWebSocket());\n};\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Field, FieldArray, formValueSelector, reduxForm} from 'redux-form';\nimport {\n    AutoComplete as MUIAutoComplete,\n    Card,\n    CardHeader,\n    CardText,\n    FloatingActionButton,\n    MenuItem,\n    IconButton\n} from 'material-ui';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\nimport ContentRemove from 'material-ui/svg-icons/content/remove';\nimport PropTypes from \"prop-types\";\nimport {AutoComplete, SelectField, TextField, Toggle,} from 'redux-form-material-ui';\nimport {disconnectSocket, sendMessage} from \"../actions\";\n\nlet filterNullsMultiValue = function (rawItems) {\n    let items = undefined;\n    for (let rawItem of rawItems) {\n        let valueSet = false;\n        for (let value of rawItem.values) {\n            if (value) {\n                valueSet = true;\n            }\n        }\n        if (rawItem.name && valueSet) {\n            if (!items) {\n                items = [];\n            }\n            items.push(rawItem);\n        }\n    }\n    return items;\n};\nlet filterNullsSingleValue = function (rawItems) {\n    let items = undefined;\n    for (let rawItem of rawItems) {\n        if (rawItem.name && rawItem.value) {\n            if (!items) {\n                items = [];\n            }\n            items.push(rawItem);\n        }\n    }\n    return items;\n};\nconst loadData = ({host = \"127.0.0.1\", port = \"1080\", requestMatcher = {}, sendMessage}) => {\n    let requestFilter = {\n        method: undefined,\n        path: undefined,\n        keepAlive: undefined,\n        secure: undefined,\n        headers: undefined,\n        queryStringParameters: undefined,\n        cookies: undefined,\n    };\n    if (requestMatcher.enabled) {\n        requestFilter = {\n            method: requestMatcher.method,\n            path: requestMatcher.path,\n            keepAlive: requestMatcher.keepAlive ? true : undefined,\n            secure: requestMatcher.secure ? true : undefined,\n            headers: undefined,\n            queryStringParameters: undefined,\n            cookies: undefined,\n        };\n        requestFilter.cookies = filterNullsSingleValue(requestMatcher.cookies);\n        requestFilter.headers = filterNullsMultiValue(requestMatcher.headers);\n        requestFilter.queryStringParameters = filterNullsMultiValue(requestMatcher.queryStringParameters);\n    }\n    console.log(JSON.stringify(requestFilter, undefined, 2));\n    sendMessage(requestFilter, host, port);\n};\n\nclass RequestFilter extends Component {\n    static propTypes = {\n        host: PropTypes.string.isRequired,\n        port: PropTypes.string.isRequired\n    };\n\n    componentWillUnmount() {\n        this.props.disconnectSocket()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.requestMatcher !== this.props.requestMatcher\n            || nextProps.expanded !== this.props.expanded) {\n            loadData(nextProps)\n        }\n    }\n\n    renderValues = ({fields, disabled}) => {\n        return (\n            <div style={{\n                width: \"50%\",\n                padding: \"5px\",\n                paddingRight: \"10px\",\n                display: \"inline-block\",\n                verticalAlign: \"bottom\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"70%\",\n                }}>\n\n                    <Field\n                        disabled={disabled}\n                        fullWidth={true}\n                        style={{\n                            width: \"75%\",\n                        }}\n                        name={field}\n                        component={TextField}\n                        hintText=\"Value\"\n                        onChange={(e) => {\n                            console.log(e)\n                        }}\n                        floatingLabelText=\"Value\"\n                    />\n                    {index > 0 ?\n                        <IconButton style={{\n                            display: \"inline-block\",\n                            verticalAlign: \"bottom\",\n                            minWidth: \"28px\",\n                            width: \"28px\",\n                        }} disabled={disabled} onClick={() => fields.remove(index)}>\n                            <ContentRemove/>\n                        </IconButton>\n                        : \"\"}\n\n                </div>)}\n                <IconButton style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                    minWidth: \"28px\",\n                    width: \"28px\",\n                }} disabled={disabled} onClick={() => fields.push(\"\")}>\n                    <ContentAdd/>\n                </IconButton>\n            </div>)\n    };\n    renderKeysToMultiValues = ({fields, disabled, title}) => {\n        return (<div style={{\n            width: \"100%\",\n            display: \"inline-block\",\n            paddingRight: \"10px\",\n        }}>\n            <div style={{\n                color: disabled ? \"#9c9c9c\" : \"rgb(0, 188, 212)\",\n                width: \"20%\",\n                paddingTop: \"45px\",\n                paddingRight: \"15px\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                textAlign: \"right\",\n                fontFamily: \"Roboto, sans-serif\",\n            }}>{title}\n            </div>\n            <div style={{\n                display: \"inline-block\",\n                width: \"75%\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"80%\",\n                }}>\n                    <div style={{\n                        width: \"30%\",\n                        padding: \"5px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"top\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            name={`${field}.name`}\n                            component={AutoComplete}\n                            hintText=\"Name\"\n                            floatingLabelText=\"Name\"\n                            fullWidth={true}\n                            openOnFocus\n                            filter={MUIAutoComplete.fuzzyFilter}\n                            dataSource={[]}\n                        />\n                    </div>\n                    <FieldArray name={`${field}.values`} component={this.renderValues} disabled={disabled}/>\n                    {index > 0 ? <FloatingActionButton mini={true} style={{\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\"\n                    }} disabled={disabled} onClick={() => fields.remove(index)}>\n                        <ContentRemove/>\n                    </FloatingActionButton> : \"\"}\n                </div>)}\n                <FloatingActionButton mini={true} style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                }} disabled={disabled} onClick={() => fields.push({\n                    values: [\"\"]\n                })}>\n                    <ContentAdd/>\n                </FloatingActionButton>\n            </div>\n        </div>)\n    };\n    renderKeysToValues = ({fields, disabled, title}) => {\n        return (<div style={{\n            width: \"100%\",\n            display: \"inline-block\",\n            paddingRight: \"10px\",\n        }}>\n            <div style={{\n                color: disabled ? \"#9c9c9c\" : \"rgb(0, 188, 212)\",\n                width: \"20%\",\n                paddingTop: \"45px\",\n                paddingRight: \"15px\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                textAlign: \"right\",\n                fontFamily: \"Roboto, sans-serif\",\n            }}>{title}\n            </div>\n            <div style={{\n                display: \"inline-block\",\n                width: \"75%\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"80%\",\n                }}>\n                    <div style={{\n                        width: \"30%\",\n                        padding: \"5px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"top\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            name={`${field}.name`}\n                            component={AutoComplete}\n                            hintText=\"Name\"\n                            floatingLabelText=\"Name\"\n                            fullWidth={true}\n                            openOnFocus\n                            filter={MUIAutoComplete.fuzzyFilter}\n                            dataSource={[]}\n                        />\n                    </div>\n                    <div style={{\n                        width: \"45%\",\n                        padding: \"5px\",\n                        paddingRight: \"10px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            fullWidth={true}\n                            name={`${field}.value`}\n                            component={TextField}\n                            hintText=\"Value\"\n                            floatingLabelText=\"Value\"\n                        />\n                    </div>\n                    {index > 0 ? <FloatingActionButton mini={true} style={{\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\"\n                    }} disabled={disabled} onClick={() => fields.remove(index)}>\n                        <ContentRemove/>\n                    </FloatingActionButton> : \"\"}\n                </div>)}\n                <FloatingActionButton mini={true} style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                }} disabled={disabled} onClick={() => fields.push({})}>\n                    <ContentAdd/>\n                </FloatingActionButton>\n            </div>\n        </div>)\n    };\n\n    render() {\n        const disabled = !this.props.requestMatcher.enabled;\n        return (\n            <div style={{\n                margin: \"1%\",\n                width: \"98%\"\n            }}>\n                <Card expanded={this.expanded}>\n                    <CardHeader\n                        title=\"Filter\"\n                        actAsExpander={true}\n                        showExpandableButton={true}\n                        style={{\n                            backgroundColor: disabled ? \"rgba(220, 220, 220, 0.5)\" : \"rgba(0, 188, 212, 0.75)\"\n                        }}\n                    />\n                    <CardText expandable={true}>\n                        <div style={{\n                            display: \"inline\"\n                        }}>\n                            <div style={{\n                                width: \"10%\",\n                                display: \"inline-block\",\n                                verticalAlign: \"top\",\n                            }}>\n                                <div style={{\n                                    paddingRight: \"10px\",\n                                    padding: \"5px\",\n                                    display: \"inline-block\",\n                                }}>\n                                    <Field\n                                        name=\"enabled\"\n                                        component={Toggle}\n                                        label=\"Enabled\"\n                                        labelPosition=\"left\"\n                                    />\n                                </div>\n                            </div>\n                            <div style={{\n                                width: \"90%\",\n                                display: \"inline-block\",\n                                verticalAlign: \"bottom\",\n                                marginBottom: \"2%\",\n                            }}>\n                                <div style={{\n                                    width: \"32%\",\n                                    paddingLeft: \"3%\",\n                                    display: \"inline-block\",\n                                    verticalAlign: \"top\",\n                                }}>\n                                    <div>\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"method\"\n                                                component={SelectField}\n                                                fullWidth={true}\n                                                floatingLabelText=\"Method\"\n                                            >\n                                                <MenuItem value=\"\" primaryText=\"\" />\n                                                <MenuItem value=\"CONNECT\" primaryText=\"CONNECT\" />\n                                                <MenuItem value=\"DELETE\" primaryText=\"DELETE\" />\n                                                <MenuItem value=\"GET\" primaryText=\"GET\" />\n                                                <MenuItem value=\"HEAD\" primaryText=\"HEAD\" />\n                                                <MenuItem value=\"OPTIONS\" primaryText=\"OPTIONS\" />\n                                                <MenuItem value=\"PATCH\" primaryText=\"PATCH\" />\n                                                <MenuItem value=\"POST\" primaryText=\"POST\" />\n                                                <MenuItem value=\"PUT\" primaryText=\"PUT\" />\n                                                <MenuItem value=\"TRACE\" primaryText=\"TRACE\" />\n                                            </Field>\n                                        </div>\n\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"path\"\n                                                component={TextField}\n                                                fullWidth={true}\n                                                hintText=\"Path\"\n                                                floatingLabelText=\"Path\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"bottom\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"secure\"\n                                                component={Toggle}\n                                                label=\"Secure\"\n                                                labelPosition=\"right\"\n                                            />\n                                        </div>\n\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"bottom\",\n                                            overflow: \"none\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"keepAlive\"\n                                                component={Toggle}\n                                                label=\"Keep-Alive\"\n                                                labelPosition=\"right\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{\n                                    width: \"65%\",\n                                    display: \"inline-block\",\n                                    verticalAlign: \"bottom\",\n                                }}>\n                                    <div>\n                                        <FieldArray name={`headers`} component={this.renderKeysToMultiValues}\n                                                    disabled={disabled} title={\"Headers:\"}/>\n                                        <FieldArray name={`cookies`} component={this.renderKeysToValues}\n                                                    disabled={disabled}\n                                                    title={\"Cookies:\"}/>\n                                        <FieldArray name={`queryStringParameters`}\n                                                    component={this.renderKeysToMultiValues}\n                                                    disabled={disabled} title={\"Query Parameters:\"}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </CardText>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst formName = 'requestFilter';\nconst selector = formValueSelector(formName);\n\nRequestFilter = reduxForm({\n    form: formName,\n    initialValues: {\n        headers: [{\n            values: [\"\"]\n        }],\n        queryStringParameters: [{\n            values: [\"\"]\n        }],\n        cookies: [{}],\n    },\n    destroyOnUnmount: false\n})(RequestFilter);\n\nconst mapStateToProps = (state, props) => {\n    return {\n        requestMatcher: selector(state, 'enabled', 'method', 'path', 'keepAlive', 'secure', 'headers', 'queryStringParameters', 'cookies'),\n        expanded: state.requestFilterExpanded,\n    }\n};\n\nconst mapDispatchToProps = {\n    sendMessage,\n    disconnectSocket\n};\n\nRequestFilter = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    undefined,\n    {pure: true}\n)(RequestFilter);\n\nexport default RequestFilter;","import React, {Component} from 'react';\nimport ReactJson from 'react-json-view';\n\nexport default class JsonItem extends Component {\n    static calculateIndex(counter, jsonItem) {\n        let httpObject = jsonItem;\n        let index = null;\n        if (httpObject) {\n            if (httpObject.httpRequest) {\n                httpObject = httpObject.httpRequest;\n            }\n            if (httpObject.method) {\n                const value = httpObject.method;\n                if (index) {\n                    index = index + \" \" + value;\n                } else {\n                    index = value;\n                }\n            }\n            if (httpObject.path) {\n                const value = httpObject.path;\n                if (index) {\n                    index = index + \" \" + value;\n                } else {\n                    index = value;\n                }\n            }\n            if (httpObject.statusCode) {\n                const value = httpObject.statusCode;\n                if (index) {\n                    index = index + \" \" + value;\n                } else {\n                    index = value;\n                }\n            }\n            if (httpObject.reasonPhrase) {\n                const value = httpObject.reasonPhrase;\n                if (index) {\n                    index = index + \" \" + value;\n                } else {\n                    index = value;\n                }\n            }\n        }\n        return index;\n    }\n\n    render() {\n        const {\n            index = 0,\n            displayIndex = true,\n            collapsed = 0,\n            jsonItem = null,\n            display = \"block\",\n            enableClipboard = true,\n            textStyle = {}\n        } = this.props;\n\n        if (typeof jsonItem === \"object\") {\n            return (<ReactJson\n                src={jsonItem}\n                style={{\n                    whiteSpace: \"nowrap\",\n                    paddingTop: \"6px\",\n                    display: (display === \"table-cell\" ? \"table-cell\" : \"block\")\n                }}\n                name={displayIndex ? <div style={{\n                    display: \"table-cell\",\n                    maxWidth: \"200px\",\n                    minWidth: \"115px\",\n                    textOverflow: \"ellipsis\",\n                    overflow: \"hidden\"\n                }}>{JsonItem.calculateIndex(index != null ? \"\" + index : index, jsonItem)}</div> : null}\n                theme={\"tomorrow\"}\n                iconStyle={\"triangle\"}\n                indentWidth={4}\n                collapsed={collapsed != null ? collapsed : 0}\n                shouldCollapse={(field) => {\n                    return false\n                }}\n                enableClipboard={enableClipboard}\n                displayObjectSize={false}\n                displayDataTypes={false}\n                onEdit={false}\n                onAdd={false}\n                onDelete={false}\n            />);\n        } else if (typeof jsonItem === \"string\" && jsonItem.length > 20) {\n            return (\n                <details style={textStyle}>\n                    <summary style={{\n                        color: \"rgb(222, 147, 95)\",\n                        fontSize: \"30px\",\n                        lineHeight: \"15px\",\n                        display: \"table-cell\"\n                    }}>...\n                    </summary>\n                    <pre>{jsonItem}</pre>\n                </details>\n            );\n        } else if (typeof jsonItem === \"string\") {\n            return (\n                <pre style={textStyle}>{jsonItem}</pre>\n            );\n        } else if (typeof jsonItem === \"number\") {\n            return (\n                <pre style={textStyle}>{jsonItem}</pre>\n            );\n        } else {\n            return (<div/>);\n        }\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport JsonItem from \"./JsonItem\";\nimport './log.css';\n\nexport default class LogMessage extends Component {\n    static propTypes = {\n        logMessage: PropTypes.object.isRequired\n    };\n    cellStyle = {\n        paddingTop: \"5px\",\n        paddingLeft: \"4px\",\n        paddingRight: \"4px\",\n        paddingBottom: \"3px\",\n        margin: \"2px 0px 3px\",\n        borderRadius: \"2px\",\n        display: \"table-cell\",\n        verticalAlign: \"top\",\n        fontFamily: \"Roboto,sans-serif\"\n    };\n\n    static messageFormatter(message, messageArguments, cellStyle, paddingWidth) {\n        let formattedMessage = [];\n        const messageParts = (message || \"\").split(\"{}\");\n        let messageDiv = 0;\n        for (let messagePartIndex = 0; messagePartIndex < messageParts.length; messagePartIndex++) {\n            if (messageParts[messagePartIndex].length > 0) {\n                formattedMessage.push(<div style={cellStyle}\n                                           key={\"msg\" + messagePartIndex}>{messageParts[messagePartIndex]}</div>);\n                messageDiv++;\n            }\n            if (messageArguments && messageArguments.length > 0 && messageArguments.length > messagePartIndex) {\n                if (messageParts[messagePartIndex].indexOf(\"because:\") !== -1) {\n                    let reason = messageArguments[messagePartIndex].split(\",\").map(\n                        (reason, index) => {\n                            let color = \"orange\";\n                            if (reason.indexOf(\"matched\") !== -1) {\n                                color = \"rgb(85, 205, 189)\";\n                            } else if (reason.indexOf(\"didn't match\") !== -1) {\n                                color = \"rgb(234, 67, 106)\";\n                            }\n                            return <span key={index}\n                                         style={{\n                                             display: \"block\",\n                                             fontSize: \"0.85em\",\n                                             lineHeight: \"1.25em\",\n                                             color: color\n                                         }}>{reason}</span>\n                        }\n                    );\n                    let style = Object.assign({}, cellStyle);\n                    style.paddingTop = \"0px\";\n                    formattedMessage.push(\n                        <div style={style} key={\"arg\" + messagePartIndex}>\n                            <details>\n                                <summary style={{\n                                    color: \"rgb(222, 147, 95)\",\n                                    fontSize: \"30px\",\n                                    lineHeight: \"15px\"\n                                }}>...\n                                </summary>\n                                {reason}\n                            </details>\n                        </div>);\n                } else {\n                    let jsonItem = messageArguments[messagePartIndex];\n                    if (typeof jsonItem === \"string\" && messageParts[messagePartIndex].indexOf(\"generated output:\") !== -1) {\n                        try {\n                            jsonItem = JSON.parse(jsonItem);\n                        } catch (e) {\n                            // ignore error in parsing, instead just output string\n                        }\n                    }\n                    formattedMessage.push(<JsonItem key={\"arg\" + messagePartIndex}\n                                                    index={null}\n                                                    displayIndex={messageParts[messagePartIndex].indexOf(\"for action:\") === -1}\n                                                    collapsed=\"0\"\n                                                    display={\"table-cell\"}\n                                                    textStyle={{\n                                                        fontFamily: \"Roboto, sans-serif\",\n                                                        backgroundColor: \"rgb(29, 31, 33)\",\n                                                        display: \"table-cell\",\n                                                        verticalAlign: \"top\"\n                                                    }}\n                                                    enableClipboard={false}\n                                                    jsonItem={jsonItem}/>);\n                }\n                messageDiv++;\n            }\n        }\n        for (let paddingIndex = messageDiv; paddingIndex < paddingWidth; paddingIndex++) {\n            formattedMessage.push(<div key={\"pad\" + paddingIndex} style={cellStyle}> </div>);\n        }\n        return formattedMessage;\n    };\n\n    static selectStyle(type, noBorderTop) {\n        let style = {\n            borderTopStyle: \"dashed\",\n            borderTopWidth: \"1px\",\n            borderTopColor: \"#cfcccc57\",\n            whiteSpace: \"nowrap\",\n            overflow: \"auto\",\n            display: \"table-row\",\n            width: \"100%\"\n        };\n        if (noBorderTop) {\n            style.borderTopWidth = \"0\";\n        }\n        switch (type) {\n            case \"TRACE\":\n                style.color = \"rgb(255, 255, 255)\";\n                break;\n            case \"CLEARED\":\n                style.color = \"rgb(222, 147, 95)\";\n                break;\n            case \"RETRIEVED\":\n                style.color = \"rgb(222, 147, 95)\";\n                break;\n            case \"CREATED_EXPECTATION\":\n                style.color = \"rgb(216,199,166)\";\n                break;\n            case \"EXPECTATION_RESPONSE\":\n                style.color = \"rgb(161,208,231)\";\n                break;\n            case \"EXPECTATION_MATCHED\":\n                style.color = \"rgb(117,185,186)\";\n                break;\n            case \"EXPECTATION_NOT_MATCHED\":\n                style.color = \"rgb(204,165,163)\";\n                break;\n            case \"VERIFICATION\":\n                style.color = \"rgb(178, 148, 187)\";\n                break;\n            case \"VERIFICATION_FAILED\":\n                style.color = \"rgb(234, 67, 106)\";\n                break;\n            case \"FORWARDED_REQUEST\":\n                style.color = \"rgb(152, 208, 255)\";\n                break;\n            case \"TEMPLATE_GENERATED\":\n                style.color = \"rgb(255, 255, 255)\";\n                break;\n            case \"SERVER_CONFIGURATION\":\n                style.color = \"rgb(201, 125, 240)\";\n                break;\n            case \"WARN\":\n                style.color = \"rgb(255, 255, 255)\";\n                style.whiteSpace = \"pre-wrap\";\n                break;\n            case \"EXCEPTION\":\n                style.color = \"rgb(255,133,133)\";\n                style.whiteSpace = \"pre-wrap\";\n                break;\n            default:\n                style.color = \"rgb(201, 125, 240)\"; // spare\n        }\n        return style;\n    }\n\n    render() {\n        const {\n            logMessage = {},\n            logMessageMaxWidth = 0,\n            index\n        } = this.props;\n        const formattedMessage = LogMessage.messageFormatter(logMessage.messageFormat, logMessage.arguments, this.cellStyle, logMessageMaxWidth);\n        const noBorderTop = formattedMessage[0].props.children <= 1 || index === 0;\n        const timestamp = logMessage.timestamp && logMessage.timestamp.replace((new Date()).toISOString().split('T')[0], \"\").trim();\n        return (<div style={LogMessage.selectStyle(logMessage.type, noBorderTop)}>\n            <div style={Object.assign({whiteSpace: \"nowrap\"}, this.cellStyle)}>{timestamp}</div>\n            {formattedMessage.map(div => div)}\n        </div>)\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ListHeader extends Component {\n    static propTypes = {\n        text: PropTypes.string.isRequired\n    };\n\n    render() {\n        const {\n            text = \"\"\n        } = this.props;\n        return (\n            <div style={{\n                font: \"1.25em 'Averia Sans Libre', Helvetica, Arial, sans-serif\",\n                margin: \"0px 0px 3px 2px\"\n            }}>{text}</div>\n        )\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport LogMessage from \"../components/LogMessage\";\nimport ListHeader from \"../components/ListHeader\";\n\nexport default class LogList extends Component {\n    static propTypes = {\n        header: PropTypes.string.isRequired,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            value: PropTypes.object.isRequired\n        })).isRequired,\n        logMessageMaxWidth: PropTypes.number.isRequired,\n    };\n\n    render() {\n        const {\n            header = \"\",\n            items = [],\n            logMessageMaxWidth = 0,\n        } = this.props;\n        return (\n            <div style={{\n                padding: \"2px 0\"\n            }}>\n                <ListHeader text={header}/>\n                <div style={{\n                    overflowY: \"scroll\",\n                    maxHeight: \"400px\",\n                    minHeight: \"100px\",\n                    borderRadius: \"5px\",\n                    margin: \"2px 0px 3px\",\n                    padding: \"5px\",\n                    backgroundColor: \"rgb(29, 31, 33)\",\n                    color: \"rgb(250, 250, 250)\",\n                }}>\n                    <div style={\n                        {\n                            borderCollapse: \"collapse\",\n                            display: \"table\",\n                            minWidth: \"100%\"\n                        }\n                    }>\n                        {items.map((item, index) => <LogMessage index={index}\n                                                                      key={item.key}\n                                                                      logMessage={item.value}\n                                                                      logMessageMaxWidth={logMessageMaxWidth}/>)}\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport JsonItem from \"../components/JsonItem\";\nimport ListHeader from \"../components/ListHeader\";\n\nexport default class JsonList extends Component {\n    static propTypes = {\n        header: PropTypes.string.isRequired,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            value: PropTypes.object.isRequired\n        })).isRequired,\n    };\n\n    render() {\n        const {\n            header = \"\",\n            items = [],\n            reverseIndex = true\n        } = this.props;\n        return (\n            <div style={{\n                padding: \"2px 0\"\n            }}>\n                <ListHeader text={header}/>\n                <div style={{\n                    overflowY: \"scroll\",\n                    maxHeight: \"400px\",\n                    minHeight: \"100px\",\n                    borderRadius: \"5px\",\n                    margin: \"2px 0px 3px\",\n                    padding: \"5px\",\n                    backgroundColor: \"rgb(29, 31, 33)\",\n                    color: \"rgb(250, 250, 250)\",\n                }}>\n                    {items.map((item, index) => <JsonItem index={reverseIndex ? items.length - index : index + 1}\n                                                              key={item.key}\n                                                              jsonItem={item.value}/>)}\n                </div>\n            </div>\n        );\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport LogList from \"../containers/LogList\";\nimport JsonList from \"../containers/JsonList\";\nimport {transform} from 'lodash/object'\nimport './grid.css';\n\nclass Grid extends Component {\n    static propTypes = {\n        entities: PropTypes.shape({\n            activeExpectations: PropTypes.array.isRequired,\n            recordedExpectations: PropTypes.array.isRequired,\n            recordedRequests: PropTypes.array.isRequired,\n            logMessages: PropTypes.array.isRequired,\n            logMessageMaxWidth: PropTypes.number.isRequired,\n        }).isRequired,\n        requestFilter: PropTypes.object.isRequired,\n    };\n\n    render() {\n        const {\n            entities: {\n                activeExpectations = [],\n                recordedExpectations = [],\n                recordedRequests = [],\n                logMessages = [],\n                logMessageMaxWidth = 0\n            },\n        } = this.props;\n        return (\n            <div style={{\n                margin: \"1%\",\n                width: \"98%\"\n            }}>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"600px\",\n                }}>\n                    <LogList items={logMessages}\n                             header={\"Log Messages (most recent at the top)\"}\n                             logMessageMaxWidth={logMessageMaxWidth}/>\n                </div>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"600px\",\n                }}>\n                    <JsonList items={activeExpectations}\n                              header={\"Active Expectations (in the order they are applied)\"}\n                              reverseIndex={false}/>\n                </div>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"600px\",\n                }}>\n                    <div style={{\n                        width: \"49%\",\n                        float: \"left\",\n                        padding: \"0\",\n                        paddingRight: \"1%\",\n                        borderRightStyle: \"dashed\",\n                        borderRightWidth: \"1px\",\n                    }}>\n                        <JsonList items={recordedRequests}\n                                  header={\"Received Requests (most recent at the top)\"}/>\n                    </div>\n                    <div style={{\n                        width: \"49%\",\n                        float: \"right\"\n                    }}>\n                        <JsonList items={transform(recordedExpectations, function (result, expectation) {\n                            result.push({\n                                key: expectation.key,\n                                value: {\n                                    httpRequest: expectation.value.httpRequest,\n                                    httpResponse: expectation.value.httpResponse,\n                                },\n                            });\n                        }, [])} header={\"Proxied Requests (most recent at the top)\"}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {\n        activeExpectations = [],\n        recordedExpectations = [],\n        recordedRequests = [],\n        logMessages = [],\n        logMessageMaxWidth = 0\n    } = state.entities;\n\n    const {\n        requestFilter = {}\n    } = state;\n\n    return {\n        entities: {\n            activeExpectations,\n            recordedExpectations,\n            recordedRequests,\n            logMessages,\n            logMessageMaxWidth\n        },\n        requestFilter\n    }\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid)\n","import React, {Component} from 'react';\nimport RequestFilter from \"../components/RequestFilter\";\nimport Grid from './Grid';\nimport {parse} from 'query-string';\n\nexport default class App extends Component {\n    static host() {\n        if (window.location.search && parse(window.location.search).host) {\n            return parse(window.location.search).host;\n        } else if (window.location.hostname) {\n            return window.location.hostname;\n        }\n        return window.location.hostname;\n    }\n\n    static port() {\n        if (window.location.search && parse(window.location.search).port) {\n            return parse(window.location.search).port;\n        } else if (window.location.port) {\n            return window.location.port;\n        } else if (window.location.protocol === \"https:\") {\n            return 443;\n        } else {\n            return 80;\n        }\n    }\n\n    render() {\n        return (<div>\n            <RequestFilter host={App.host()} port={App.port()}/>\n            <Grid/>\n        </div>)\n    }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport App from './containers/App'\nimport configureStore from './store/configureStore'\nimport {MuiThemeProvider} from \"material-ui\";\n\nconst store = configureStore();\n\nrender(\n    <Provider store={store}>\n        <MuiThemeProvider>\n            <App/>\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('app')\n);\n","import {MESSAGE_RECEIVED} from '../actions'\nimport {reverse} from 'lodash/array'\n\nconst entities = (state = {\n    activeExpectations: [],\n    recordedExpectations: [],\n    recordedRequests: [],\n    logMessages: []\n}, action) => {\n    let httpRequest;\n    let logMessageMaxWidth = 0;\n    if (action.type === MESSAGE_RECEIVED && action.entities) {\n        const logMessages = (action.entities.logMessages ? reverse(action.entities.logMessages) : []).map((logMessage) => {\n            try {\n                const value = JSON.parse(logMessage.value);\n                let logMessageWidth = value.arguments ? value.arguments.length * 2 : 0;\n                if (value.messageFormat.indexOf(\"because:\") !== -1) {\n                    logMessageWidth++;\n                }\n                if (logMessageWidth > logMessageMaxWidth) {\n                    logMessageMaxWidth = logMessageWidth;\n                }\n                if (value.messageFormat.indexOf(\"request:{}didn't match expectation:{}because:{}\") !== -1) {\n                    if (httpRequest && JSON.stringify(httpRequest) === JSON.stringify(value.httpRequest)) {\n                        value.messageFormat = \" {}didn't match expectation:{}because:{}\";\n                        value.arguments[0] = \"\";\n                        value.timestamp = \"\";\n                    }\n                    httpRequest = value.httpRequest;\n                } else {\n                    httpRequest = undefined;\n                }\n                return {\n                    key: logMessage.key,\n                    value: value\n                };\n            } catch (e) {\n                console.log(\"Error parsing: \" + logMessage.value);\n                return null;\n            }\n        });\n        logMessages.logMessageMaxWidth = logMessageMaxWidth;\n        return {\n            activeExpectations: action.entities.activeExpectations ? action.entities.activeExpectations : [],\n            recordedExpectations: action.entities.recordedExpectations ? reverse(action.entities.recordedExpectations) : [],\n            recordedRequests: action.entities.recordedRequests ? reverse(action.entities.recordedRequests) : [],\n            logMessages: logMessages,\n            logMessageMaxWidth: logMessageMaxWidth\n        };\n    }\n    return state;\n};\n\nexport default entities","import {combineReducers} from 'redux'\nimport {reducer as form} from 'redux-form'\nimport entities from './entities'\n\nconst rootReducer = combineReducers({\n    entities,\n    form,\n});\n\nexport default rootReducer","import {\n    CONNECT_SOCKET, DISCONNECT_SOCKET, SEND_MESSAGE, webSocketMessageReceived\n} from '../actions'\n\nexport default (function () {\n    let socket = null;\n    let connected = false;\n\n    let disconnectSocket = function () {\n        connected = false;\n        if (socket != null) {\n            socket.close()\n        }\n        socket = null\n    };\n    let connectSocket = function (action, next) {\n        if (socket != null) {\n            socket.close()\n        }\n\n        socket = new WebSocket(\"wss://\" + action.host + \":\" + action.port + \"/_mockserver_ui_websocket\");\n        socket.onmessage = (event) => {\n            next(webSocketMessageReceived(\n                JSON.parse(event.data)\n            ))\n        };\n        socket.onclose = () => {\n            disconnectSocket();\n        };\n        socket.onopen = () => {\n            connected = true;\n            if (socket && action.message && socket.readyState === 1) {\n                socket.send(JSON.stringify(action.message))\n            }\n        }\n    };\n    return store => next => action => {\n        switch (action.type) {\n            case CONNECT_SOCKET:\n                connectSocket(action, next);\n                break;\n            case DISCONNECT_SOCKET:\n                disconnectSocket();\n                break;\n            case SEND_MESSAGE:\n                if (connected) {\n                    socket.send(JSON.stringify(action.message))\n                } else {\n                    connectSocket(action, next)\n                }\n                break;\n            default:\n                // listen for changes here\n                return next(action)\n        }\n    }\n\n})()","export default store => next => action => {\n    next({ ...action, getState: store.getState });\n}","import {applyMiddleware, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\nimport socket from '../middleware/socket'\nimport exposeState from \"../middleware/exposeState\";\n\nconst configureStore = preloadedState => {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunk, socket, exposeState)\n    )\n};\n\nexport default configureStore\n"],"sourceRoot":""}